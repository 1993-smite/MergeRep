
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="/node_modules/svg.js/dist/svg.js"></script>

<link rel="stylesheet" href="~/css/tooltip.css" />

<h2>SVG interactive image <timer></timer></h2>
<div class="row">
    <object data="~/css/logo.svg" type="image/svg+xml" id="svgmap" width="300" height="300"></object>
</div>

<a class="Button" href="#0" data-tooltip="File size: 50MB">
    <span class="Button__textWrapper">
        <span class="Button__text">Download</span>
    </span>
</a>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            let svgdom;

            function updateLogo() {
                var ns = 'http://www.w3.org/2000/svg'
                let linkFiles = document.querySelector('#path-Files-Index');
                let filesLink = SVG(linkFiles);
                var rect = document.createElementNS(ns, 'rect')
                rect.setAttributeNS(null, 'width', 100)
                rect.setAttributeNS(null, 'height', 100)
                rect.setAttributeNS(null, 'fill', '#f06')
                linkFiles.appendChild(rect)
                filesLink.text('Files');
            }

            function loadEventForLogo() {
                

                let svgObject = document.getElementById('svgmap');
                if ('contentDocument' in svgObject) {
                    // получаем доступ к объектной модели SVG-файла
                    svgdom = $(svgObject.contentDocument);
                    let $paths = $(`path[id^='path-']`, svgdom);
                    console.log($paths);
                    for (let path of $paths) {
                        $(path).click(function () {
                            let id = $(this).attr('id');
                            let routes = id.split('-');
                            console.log("click", id.split('-'));
                            let url = `${location.origin}/${routes[1]}/${routes[2]}`;
                            location.href = url;
                        });
                    }
                    updateLogo();
                } else {
                }
            }

            setTimeout(() => loadEventForLogo(), 700);
        });
    </script>
}